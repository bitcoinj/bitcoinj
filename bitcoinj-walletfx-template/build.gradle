plugins {
    id 'java'
    id 'maven'
    id 'eclipse'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'org.beryx.jlink' version '2.14.1'
    id 'org.javamodularity.moduleplugin'    version "1.5.0"
}

repositories {
    maven { url 'https://gitlab.com/api/v4/projects/26584840/packages/maven' }  // SupernautFX
}

dependencies {
    implementation(project(':bitcoinj-walletfx')) {
        exclude group: 'org.openjfx'
    }
    implementation project(':bitcoinj-core')

    implementation('app.supernaut:app.supernaut.fx:0.2.0') {
        exclude group: 'org.openjfx'
    }
    implementation('app.supernaut:app.supernaut.fx.micronaut:0.2.0') {
        exclude group: 'org.openjfx'
    }
    implementation "io.micronaut:micronaut-inject-java:2.5.13"

    implementation 'com.google.guava:guava:27.1-android'
    implementation 'de.jensd:fontawesomefx:8.0.0'
    implementation 'com.google.zxing:core:3.4.0'

    implementation 'org.slf4j:slf4j-api:1.7.28'
    implementation 'org.slf4j:slf4j-jdk14:1.7.28'

    implementation "javax.inject:javax.inject:1"

    annotationProcessor "io.micronaut:micronaut-inject-java:1.2.0"
}

version = '0.16-SNAPSHOT'

javafx {
    version = '17.0.0.1'
    modules = [ 'javafx.controls', 'javafx.graphics', 'javafx.fxml' ]
}

patchModules.config = [
        "java.annotation=jsr305-3.0.2.jar"
]

sourceCompatibility = 11
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

mainClassName = "$moduleName/wallettemplate.WalletTemplateApp"

def appName = 'WalletTemplate'

jlink {
    addExtraDependencies("javafx")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages', '--add-modules', 'app.supernaut.fx.micronaut']
    launcher {
        name = appName
        jvmArgs = []
    }
    mergedModule {
        requires 'java.logging'
        requires 'javafx.graphics'
        requires 'javafx.controls'
        
        forceMerge 'org.slf4j'
    }
    jpackage {
        // See https://badass-jlink-plugin.beryx.org/releases/latest/#_jpackage for
        // where the plugin's jpackage task finds the path to the jpackage tool by default
        // (Currently you need to manually install a OpenJDK 14 Early Access Build including jpackage)
        jpackageHome = System.getenv('BADASS_JLINK_JPACKAGE_HOME')
        skipInstaller = false
        identifier = appName
    }
}
