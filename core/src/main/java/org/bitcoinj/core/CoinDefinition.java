package org.bitcoinj.core;

import java.math.BigInteger;
import java.util.Map;

import static org.bitcoinj.core.Coin.CENT;
import static org.bitcoinj.core.Coin.COIN;

public class CoinDefinition {


    public static final String coinName = "Syscoin";
    public static final String coinTicker = "SYS";
    public static final String coinURIScheme = "syscoin";
    public static final String cryptsyMarketId = "155";
    public static final String cryptsyMarketCurrency = "BTC";
    public static final String PATTERN_PRIVATE_KEY_START = "[7X]";


    public static final String BLOCKEXPLORER_BASE_URL_PROD = "http://explorer.darkcoin.io/";    //blockr.io
    public static final String BLOCKEXPLORER_ADDRESS_PATH = "address/";             //blockr.io path
    public static final String BLOCKEXPLORER_TRANSACTION_PATH = "tx/";              //blockr.io path
    public static final String BLOCKEXPLORER_BLOCK_PATH = "block/";                 //blockr.io path
    public static final String BLOCKEXPLORER_BASE_URL_TEST = BLOCKEXPLORER_BASE_URL_PROD;

    public static final String DONATION_ADDRESS = "UiMKDgW6t6NrbSpQtgihYKJ7hGMZ1k47io";
    public static final String DONATION_ADDRESS_TESTNET = "";

    enum CoinHash {
        SHA256,
        scrypt,
        x11
    };

    public static final CoinHash coinPOWHash = CoinHash.scrypt;

    public static boolean checkpointFileSupport = true;

    public static final int TARGET_TIMESPAN = 24 * 60 * 60; // Syscoin: 1 day
    public static final int TARGET_SPACING = 60; // Syscoin: 1 minute
    public static final int INTERVAL = TARGET_TIMESPAN / TARGET_SPACING;


    public static int spendableCoinbaseDepth = 60; //main.h: static const int COINBASE_MATURITY
    /**
     * The maximum number of coins to be generated
     */
    public static final long MAX_COINS = 2000000000;

    /**
     * The maximum money to be generated
     */
    public static final Coin MAX_MONEY = COIN.multiply(MAX_COINS);                //main.h:  MAX_MONEY

    public static final Coin DEFAULT_MIN_TX_FEE = CENT.multiply(5);   // MIN_TX_FEE
    public static final Coin DUST_LIMIT = Coin.valueOf(1000); //main.h CTransaction::GetMinFee        0.01 coins

    public static final int PROTOCOL_VERSION = 70051;          //version.h PROTOCOL_VERSION
    public static final int MIN_PROTOCOL_VERSION = 70005;        //version.h MIN_PROTO_VERSION
    public static final int BIP0031_VERSION = 60000;

    public static final int BLOCK_CURRENTVERSION = 2;   //CBlock::CURRENT_VERSION
    public static final int MAX_BLOCK_SIZE = 1000 * 1000;

    public static final int Port    = 8369;       //protocol.h GetDefaultPort(testnet=false)
    public static final int TestPort = 18369;     //protocol.h GetDefaultPort(testnet=true)

    //
    //  Production
    //
    public static final int AddressHeader = 63;             //base58.h CBitcoinAddress::PUBKEY_ADDRESS
    public static final int p2shHeader = 5;             //base58.h CBitcoinAddress::SCRIPT_ADDRESS
    public static final int dumpedPrivateKeyHeader = 128;   //common to all coins
    public static final long PacketMagic = 0xdcececdcL;

    //Genesis Block Information from main.cpp: LoadBlockIndex
    static public long genesisBlockDifficultyTarget = (0x1e0ffff0L);         //main.cpp: LoadBlockIndex
    static public long genesisBlockTime = 1405483400L;                       //main.cpp: LoadBlockIndex
    static public long genesisBlockNonce = (1157535);                         //main.cpp: LoadBlockIndex
    static public String genesisHash = "c84c8d0f52a7418b28a24e7b5354d6febed47c8cc33b3fa20fdbe4b3a1fcd9c4"; //main.cpp: hashGenesisBlock
    static public String genesisMerkleRoot = "45eef7a7ed92208bcb532a58c3048bc38a299f9edfd8b48b677cabf4370274c9";
    static public Coin genesisBlockValue = COIN.multiply(1024);                                                              //main.cpp: LoadBlockIndex
    static public byte[] genesisDataBytes = "".getBytes();
    static public String genesisTxInBytes = "0002e7034c4e4e4153413a2048756d616e732057696c6c2050726f766520e28098576520417265204e6f7420416c6f6e6520496e2054686520556e697665727365e280992057697468696e203230205965617273";


    //net.cpp strDNSSeed
    static public String[] dnsSeeds = new String[] {
            "dnsseed.unionpluscoin.org",

    };

    public static int minBroadcastConnections = 0;   //0 for default; we need more peers.

    //
    // TestNet - not tested
    //
    public static final int testnetAddressHeader = 65;             //base58.h CBitcoinAddress::PUBKEY_ADDRESS_TEST
    public static final int testnetp2shHeader = 196;             //base58.h CBitcoinAddress::SCRIPT_ADDRESS_TEST
    public static final long testnetPacketMagic = 0xacdcdcacL;      //
    public static final String testnetGenesisHash = "2f42154af40613d1fc0f5c63fcade17c1fbf4aff311722b38dd6698b77668b34";
    static public String testnetGenesisMerkleRoot = "dd5c9c97f242247dd7c7be9fba1f71c4f267860f845826092a3bed8836ff4d7b";
    static public long testnetGenesisBlockDifficultyTarget = (0x1e0ffff0L);         //main.cpp: LoadBlockIndex
    static public long testnetGenesisBlockTime = 1405483297L;                       //main.cpp: LoadBlockIndex
    static public long testnetGenesisBlockNonce = (1565196);                         //main.cpp: LoadBlockIndex


    //main.cpp GetBlockValue(height, fee)
    public static final BigInteger GetBlockReward(int nHeight, NetworkParameters params)
    {

        Coin nSubsidy = COIN.multiply(128);
        if(nHeight == 0)
            nSubsidy = COIN.multiply(1024); // genesis amount
        else if(nHeight == 1)
            nSubsidy = COIN.multiply(364222858); // pre-mine amount
        else if(nHeight > 259440 && nHeight <= 777840)
            nSubsidy = COIN.multiply(96);
        else if(nHeight > 777840 && nHeight <= 1814640)
            nSubsidy = COIN.multiply(80);
        else if(nHeight > 1814640 && nHeight <= 3369840)
            nSubsidy = COIN.multiply(64);
        else if(nHeight > 3369840 && nHeight <= 5443440)
            nSubsidy = COIN.multiply(48);
        else if(nHeight > 5443440 && nHeight <= 8035440)
            nSubsidy = COIN.multiply(40);
        else if(nHeight > 8035440 && nHeight <= 35913640)
            nSubsidy = COIN.multiply(32);
        else if( ( !params.getId().equals(NetworkParameters.ID_TESTNET) ) && ( nHeight > 35913640 || nHeight < 241 ) )
            nSubsidy = Coin.valueOf(0);
        else if( ( params.getId().equals(NetworkParameters.ID_TESTNET) ) && ( nHeight > 35913640 ) )
            nSubsidy = Coin.valueOf(0);


        return BigInteger.valueOf(nSubsidy.getValue());
    }


    public static BigInteger proofOfWorkLimit = Utils.decodeCompactBits(0x1e0fffffL);  //main.cpp bnProofOfWorkLimit (~uint256(0) >> 20); // syscoin: starting difficulty is 1 / 2^12

    static public String[] testnetDnsSeeds = new String[] {
            "testnet-seed.unionpluscoin.org",
    };
    //from main.h: CAlert::CheckSignature
    public static final String SATOSHI_KEY = "04a0a5a88b2cebf0d6a7d20214e6bd51c903645505f72d05d536c9f3b996ec428150931cc6e9943f8603f756907b8793d715cb3b4fcca2735110c324c98158f456";
    public static final String TESTNET_SATOSHI_KEY = "0400a665daf19bf39db0d2072ea4edd5ca7a9070b81001934bfd4fa0d12561b105be22ea92c4608555f97819ffeb1c80cd701fcc43cd6a38ceefb128699e593aa3";

    /** The string returned by getId() for the main, production network where people trade things. */
    public static final String ID_MAINNET = "org.unionpluscoin.production";
    /** The string returned by getId() for the testnet. */
    public static final String ID_TESTNET = "org.unionpluscoin.test";
    /** Unit test network. */
    public static final String ID_UNITTESTNET = "org.unionpluscoin.unittest";
    /** Reg test network. */
    public static final String ID_REGTEST = "org.unionpluscoin.regtest";

    //checkpoints.cpp Checkpoints::mapCheckpoints
    public static void initCheckpoints(Map<Integer, Sha256Hash> checkpoints)
    {
        checkpoints.put( 0, new Sha256Hash("0000060fea0bd344a174eeb71f3f6a06a1eb91b037c8f3c10825354df11674c8"));

    }
    public static void testnetInitCheckpoints(Map<Integer, Sha256Hash> checkpoints)
    {
        checkpoints.put( 0, new Sha256Hash("00000220ae9f6f4b878a6b2550e94148e78fa66b49846a9e447637d37af49a96"));

    }

    //Unit Test Information
    public static final String UNITTEST_ADDRESS = "UiMKDgW6t6NrbSpQtgihYKJ7hGMZ1k47io";
    public static final String UNITTEST_ADDRESS_PRIVATE_KEY = "W1xemx6mj6Lp8VzZkXQPtpKyZ7UGsDHQqEFoFUA27j2MvZzaTC3B";

}
