import org.gradle.util.GradleVersion

plugins {
    id 'java'
    id 'java-library'
}

dependencies {
    implementation project(':bitcoinj-core')
    implementation project(':bitcoinj-examples')

    testImplementation 'org.jspecify:jspecify:1.0.0'
    testImplementation 'org.slf4j:slf4j-jdk14:2.0.16'
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.11.4"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.11.4"
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.easymock:easymock:5.5.0'
    testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.18.1'
    testImplementation 'org.hamcrest:hamcrest-library:3.0'
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.11.4"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.11.4"
}

// Prevent newer Gradle from switching to JRE version of Guava for building/running integration tests.
// We want our tests to run on the lowest-common denominator Android variant. We can enforce
// this on the `implementation` configuration because `integration-test` has no dependents.
def gradleVersionTargetJVM = GradleVersion.version("7.0")
if (GradleVersion.current() > gradleVersionTargetJVM) {
    dependencies.constraints {
        implementation("com.google.guava:guava") {
            attributes {
                attribute(
                        TargetJvmEnvironment.TARGET_JVM_ENVIRONMENT_ATTRIBUTE,
                        objects.named(TargetJvmEnvironment, TargetJvmEnvironment.ANDROID))
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.release = 17
    options.compilerArgs << '-Xlint:deprecation'
}

javadoc.options.encoding = 'UTF-8'

test {
    useJUnitPlatform()
    exclude 'org/bitcoinj/core/PeerTest*'
    exclude 'org/bitcoinj/core/TransactionBroadcastTest*'
}
