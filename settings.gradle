import org.gradle.util.GradleVersion
import org.gradle.api.GradleScriptException

// Minimum Gradle version for build
def minGradleVersion = GradleVersion.version("4.4")
// Minimum Gradle version for JUnit5
def minJunit5GradleVersion = GradleVersion.version("4.6")
// Minimum Gradle version for builds of JavaFX 11 module
def minFxGradleVersion = GradleVersion.version("4.10")

rootProject.name = 'bitcoinj-parent'

if (GradleVersion.current().compareTo(minGradleVersion) < 0) {
    throw new GradleScriptException("bitcoinj build requires Gradle ${minGradleVersion} or later", null)
}

if (!JavaVersion.current().isJava11Compatible()) {
    throw new GradleScriptException("bitcoinj build requires Java 11 or later", null)
}

include 'core'
project(':core').name = 'bitcoinj-core'

include 'tools'
project(':tools').name = 'bitcoinj-tools'

include 'wallettool'
project(':wallettool').name = 'bitcoinj-wallettool'

include 'examples'
project(':examples').name = 'bitcoinj-examples'

if (GradleVersion.current().compareTo(minFxGradleVersion) > 0) {
    System.err.println "Including wallettemplate because ${GradleVersion.current()}"
    include 'wallettemplate'
    project(':wallettemplate').name = 'bitcoinj-wallettemplate'
} else {
    System.err.println "Skipping wallettemplate, requires Gradle ${minFxGradleVersion}+, currently running: ${GradleVersion.current()}"
}

if (GradleVersion.current().compareTo(minJunit5GradleVersion) >= 0) {
    System.err.println "Including integration-test because ${GradleVersion.current()}"
    include 'integration-test'
    project(':integration-test').name = 'bitcoinj-integration-test'
} else {
    System.err.println "Skipping integration-test, requires Gradle ${minJunit5GradleVersion}+, currently running: ${GradleVersion.current()}"
}
