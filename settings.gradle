plugins {
    id 'com.gradle.enterprise' version "3.14"
}

gradleEnterprise {
    buildScan {
        if (System.getenv("CI")) {
            System.err.println "Environment variable 'CI' is set, Gradle Build Scan will be published"
            publishAlways()
            tag "CI"
        }
        termsOfServiceUrl = "https://gradle.com/terms-of-service"
        termsOfServiceAgree = "yes"
    }
}

import org.gradle.util.GradleVersion

// Minimum Gradle version for build
def minGradleVersion = GradleVersion.version("6.0")

rootProject.name = 'bitcoinj-parent'

if (GradleVersion.current().compareTo(minGradleVersion) < 0) {
    throw new GradleScriptException("bitcoinj build requires Gradle ${minGradleVersion} or later", null)
}

if (!JavaVersion.current().isJava11Compatible()) {
    throw new GradleScriptException("bitcoinj build requires Java 11 or later", null)
}

include 'core'
project(':core').name = 'bitcoinj-core'

include 'tools'
project(':tools').name = 'bitcoinj-tools'

include 'wallettool'
project(':wallettool').name = 'bitcoinj-wallettool'

include 'examples'
project(':examples').name = 'bitcoinj-examples'

include 'wallettemplate'
project(':wallettemplate').name = 'bitcoinj-wallettemplate'

include 'integration-test'
project(':integration-test').name = 'bitcoinj-integration-test'
