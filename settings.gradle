import org.gradle.util.GradleVersion
import org.gradle.api.GradleScriptException

// Minimum and Maximum Gradle versions for reproducible Debian-based build
def minReproducibleGradleVersion = GradleVersion.version("4.4")
def maxReproducibleGradleVersion = GradleVersion.version("4.11")
// Minimum Gradle version for modern Gradle builds (JUnit 5, GraalVM, JavaFX support, etc.)
def minModernGradleVersion = GradleVersion.version("7.4")

rootProject.name = 'bitcoinj-parent'

if (GradleVersion.current().compareTo(minReproducibleGradleVersion) < 0  ||
        (GradleVersion.current().compareTo(maxReproducibleGradleVersion) > 0) &&
        GradleVersion.current().compareTo(minModernGradleVersion) < 0) {
    throw new GradleScriptException("bitcoinj build requires Gradle ${minReproducibleGradleVersion} - ${maxReproducibleGradleVersion} or ${minModernGradleVersion}+", null)
}

if (!JavaVersion.current().isJava11Compatible()) {
    throw new GradleScriptException("bitcoinj build requires Java 11 or later", null)
}

include 'core'
project(':core').name = 'bitcoinj-core'

include 'tools'
project(':tools').name = 'bitcoinj-tools'

include 'wallettool'
project(':wallettool').name = 'bitcoinj-wallettool'

include 'examples'
project(':examples').name = 'bitcoinj-examples'

if (GradleVersion.current().compareTo(minModernGradleVersion) > 0 && JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_17)) {
    System.err.println "Including wallettemplate because ${GradleVersion.current()}"
    include 'wallettemplate'
    project(':wallettemplate').name = 'bitcoinj-wallettemplate'
} else {
    System.err.println "Skipping wallettemplate, requires Gradle ${minModernGradleVersion}+ and Java 17+, currently running Gradle: ${GradleVersion.current()}, Java ${JavaVersion.current()}"
}

if (GradleVersion.current().compareTo(minModernGradleVersion) >= 0) {
    System.err.println "Including integration-test because ${GradleVersion.current()}"
    include 'integration-test'
    project(':integration-test').name = 'bitcoinj-integration-test'
} else {
    System.err.println "Skipping integration-test, requires Gradle ${minModernGradleVersion}+, currently running: ${GradleVersion.current()}"
}
